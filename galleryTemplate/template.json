{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "65988e24-3e26-4b24-87b6-f0dce8c546e6",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1",
                "value::all"
              ],
              "includeAll": false
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "e8c6aafb-e507-44c0-a57b-546f9cb38ea0",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type =~ \"microsoft.operationalinsights/workspaces\"",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1",
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "580d4e9b-1a68-4462-b148-2b2df37314c7",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 5184000000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "c82cb86c-bbff-4366-8748-a0b51cfd7f26",
            "version": "KqlParameterItem/1.0",
            "name": "Help",
            "label": "Show Help",
            "type": 10,
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t{ \\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\"},\\r\\n \\t{ \\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\", \\\"selected\\\":true },\\r\\n \\t{ \\\"value\\\": \\\"Change Log\\\", \\\"label\\\": \\\"Change Log\\\"}\\r\\n]\",\"transformers\":null}",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "param-Main"
    },
    {
      "type": 1,
      "content": {
        "json": "## AAD Password Protection Workbook\r\n### Change Log\r\nThis report will provide details on the Password Reset attempts of on-premises users via Azure AD Password Protection.  It will also provide details on the last sync time of the agent to the AAD Password Protection Proxy.\r\n\r\n|Version|Description|\r\n|---|---|\r\n|v1.0| Initial (Documented) Release - Oct 7, 2022. <br/ > Added Help, Change Log, and fixed some data display issues. <br />Modified Sychronization Health to compare against Event entries from each DC <br />\r\n|v0.1|Initial Workbook Creation|",
        "style": "upsell"
      },
      "conditionalVisibility": {
        "parameterName": "Help",
        "comparison": "isEqualTo",
        "value": "Change Log"
      },
      "name": "ChangeLog"
    },
    {
      "type": 1,
      "content": {
        "json": "## Help!\r\nThis option will show different fields **below** the chart describing what the details of the data above is showing.\r\n\r\nThis workbook requires:\r\n* Azure Arc-Enabled Servers or Azure IaaS VM's with a Data Collection Rule for the Azure Monitor Agent\r\n<br />**Note** - This data can also be collected in a less granular fashion via the Microsoft Monitoring Agent.  Please note that this agent goes [end of life in 2024](https://azure.microsoft.com/en-us/updates/were-retiring-the-log-analytics-agent-in-azure-monitor-on-31-august-2024/).  Please look to [migrate from MMA to AMA](https://learn.microsoft.com/en-us/azure/azure-monitor/agents/azure-monitor-agent-migration) when possible.\r\n\r\nQueries are leveraging several different locations in Azure for information:\r\n* Azure Monitor Log Analytics - Event table\r\n* Azure Resource Graph\r\n\r\nData is ingesting from the following event logs:\r\n* Microsoft-AzureADPasswordProtection-DCAgent/Operational\r\n* Microsoft-AzureADPasswordProtection-DCAgent/Admin\r\n* Microsoft-AzureADPasswordProtection-ProxyService/Operational\r\n\r\n***Important*** - Only [Password Failures] or [Password Audits] will have current data.  Azure AD Password Protection only allows a tenant to be in Audit mode or Enforced mode.\r\n\r\n** Important **: Data is collected when events trigger following the data collection methodology that AMA/MMA has adopted.  Any deviations or changes are noted in the Help text for each visualization.\r\n\r\nSource Documentation:\r\n<br />[Monitor and review logs for on-premises Azure AD Password Protection environments](https://learn.microsoft.com/en-us/azure/active-directory/authentication/howto-password-ban-bad-on-premises-monitor)\r\n<br />[Troubleshoot: On-premises Azure AD Password Protection](https://learn.microsoft.com/en-us/azure/active-directory/authentication/howto-password-ban-bad-on-premises-troubleshoot)\r\n<br />[Azure AD Password Protection agent version history](https://learn.microsoft.com/en-us/azure/active-directory/authentication/howto-password-ban-bad-on-premises-agent-versions)",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "Help",
        "comparison": "isEqualTo",
        "value": "Yes"
      },
      "name": "text_Help"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "70c1a70f-2663-40ca-a06b-43538a384a52",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "1d79c2f4-0eb4-47c7-80e1-5729053d9f4c",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Password Failures",
            "subTarget": "PasswordFailures",
            "style": "link"
          },
          {
            "id": "35a44710-4891-486b-93a0-f870069a5e7c",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Password Audits",
            "subTarget": "PasswordAudits",
            "style": "link"
          },
          {
            "id": "edee004b-0a04-46ae-8765-c5456731fe5d",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Synchronization Status",
            "subTarget": "SyncStatus",
            "style": "link"
          }
        ]
      },
      "name": "nav-Main"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Overview",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let TimeWindow = 2s;\r\nlet EventIDs = dynamic([10014,10015,30002,30003,30004,30005,30026,30027,30007,30008,30009,30010,30028,30029,30023,30024]);\r\nEvent\r\n| where EventID in~ (EventIDs) and Source  == \"Microsoft-AzureADPasswordProtection-DCAgent\"\r\n| extend parsed = parse_xml(EventData)\r\n| extend samAccountName = tostring(parsed.DataItem.EventData.Data[0].['#text'])\r\n| extend UserName = tostring(parsed.DataItem.EventData.Data[1].['#text'])\r\n| summarize arg_max(TimeGenerated,*) by bin(TimeGenerated,TimeWindow),samAccountName,EventID\r\n| order by TimeGenerated1 desc \r\n| project TimeGenerated1, samAccountName, UserName, EventID, RenderedDescription\r\n| extend EventName = case(\r\n    EventID == 10014, \"Pass - User\",\r\n    EventID == 10015, \"Pass - Admin\",\r\n    EventID == 30002, \"Fail - Tenant List - User\",\r\n    EventID == 30003, \"Fail - Tenant List - Admin\",\r\n    EventID == 30004, \"Fail - Microsoft List - User\",\r\n    EventID == 30005, \"Fail - Microsoft List - Admin\",\r\n    EventID == 30026, \"Fail - Combined Lists - User\",\r\n    EventID == 30027, \"Fail - Combined Lists - Admin\",\r\n    EventID == 30021, \"Fail - Bad UserName - User\",\r\n    EventID == 30022, \"Fail - Bad UserName - Admin\",\r\n    EventID == 30008, \"Audit - Failed Tenant List - User\",\r\n    EventID == 30007, \"Audit - Failed Tenant List - Admin\",\r\n    EventID == 30010, \"Audit - Failed Microsoft List - User\",\r\n    EventID == 30009, \"Audit - Failed Microsoft List - Admin\",\r\n    EventID == 30028, \"Audit - Failed Combined List - User\",\r\n    EventID == 30029, \"Audit - Failed Combined List - Admin\",\r\n    EventID == 30024, \"Audit - Bad UserName - User\",\r\n    EventID == 30023, \"Audit - Bad UserName - Admin\",\r\n    \"Undefined\"\r\n)\r\n| summarize count(EventID) by EventID, EventName",
              "size": 3,
              "showAnalytics": true,
              "title": "Password Set/Change Attempts Blocked",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "exportFieldName": "EventName",
              "exportParameterName": "EventName",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "EventName"
                },
                "rightContent": {
                  "columnMatch": "count_EventID",
                  "formatter": 8,
                  "formatOptions": {
                    "palette": "categorical"
                  }
                },
                "showBorder": true,
                "sortCriteriaField": "count_EventID",
                "sortOrderField": 2,
                "size": "auto"
              },
              "graphSettings": {
                "type": 0
              }
            },
            "name": "query_PasswordAttempts"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let TimeWindow = 2s;\r\nlet EventIDs = dynamic([10014,10015,30002,30003,30004,30005,30026,30027,30007,30008,30009,30010,30028,30029,30023,30024]);\r\nEvent\r\n| where EventID in~ (EventIDs) and Source  == \"Microsoft-AzureADPasswordProtection-DCAgent\"\r\n| extend parsed = parse_xml(EventData)\r\n| extend samAccountName = tostring(parsed.DataItem.EventData.Data[0].['#text'])\r\n| extend UserName = tostring(parsed.DataItem.EventData.Data[1].['#text'])\r\n| summarize arg_max(TimeGenerated,*) by bin(TimeGenerated,TimeWindow),samAccountName,EventID\r\n| order by TimeGenerated1 desc \r\n| project TimeGenerated1, samAccountName, UserName, EventID, RenderedDescription\r\n| extend EventName = case(\r\n    EventID == 10014, \"Pass - User\",\r\n    EventID == 10015, \"Pass - Admin\",\r\n    EventID == 30002, \"Fail - Tenant List - User\",\r\n    EventID == 30003, \"Fail - Tenant List - Admin\",\r\n    EventID == 30004, \"Fail - Microsoft List - User\",\r\n    EventID == 30005, \"Fail - Microsoft List - Admin\",\r\n    EventID == 30026, \"Fail - Combined Lists - User\",\r\n    EventID == 30027, \"Fail - Combined Lists - Admin\",\r\n    EventID == 30021, \"Fail - Bad UserName - User\",\r\n    EventID == 30022, \"Fail - Bad UserName - Admin\",\r\n    EventID == 30008, \"Audit - Failed Tenant List - User\",\r\n    EventID == 30007, \"Audit - Failed Tenant List - Admin\",\r\n    EventID == 30010, \"Audit - Failed Microsoft List - User\",\r\n    EventID == 30009, \"Audit - Failed Microsoft List - Admin\",\r\n    EventID == 30028, \"Audit - Failed Combined List - User\",\r\n    EventID == 30029, \"Audit - Failed Combined List - Admin\",\r\n    EventID == 30024, \"Audit - Bad UserName - User\",\r\n    EventID == 30023, \"Audit - Bad UserName - Admin\",\r\n    \"Undefined\"\r\n)\r\n| where EventName =~ \"{EventName}\"\r\n| project TimeGenerated = TimeGenerated1, samAccountName, EventID, EventName",
              "size": 3,
              "title": "{EventName} - All Users",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ]
            },
            "conditionalVisibility": {
              "parameterName": "EventName",
              "comparison": "isNotEqualTo"
            },
            "name": "query_UsersByFailureType"
          },
          {
            "type": 1,
            "content": {
              "json": "### Password Set/Change Attempts Blocked Help Text\r\n\r\nThis content is aggregating the number of users who are hitting a specific type of Block/Audit password event generated via Azure AD Password Protection.\r\n\r\nThis visualization is generated from the following events:\r\n10014,10015,30002,30003,30004,30005,30026,30027,30007,30008,30009,30010,30028,30029,30023,30024\r\n\r\nData is coming from the Microsoft-AzureADPasswordProtection-DCAgent event log on each individual DC.\r\n\r\nClicking on a type of block/audit event will populate a chart of all users who had a failed/audited password attempt.  This chart displays the time the event happened, the samAccountName, EventID, and which list (Microsoft/Tenant) the user was blocked by.\r\n\r\nVisualizations stating \"Admin\" is describing the fact that this was an administrative reset, via ADUC/ADAC or some other method.  \"User\" details the end user setting via their workstation.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "Help_OverallAttempts"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let TimeWindow = 2s;\r\nlet EventIDs = dynamic([30002,30003,30004,30005,30026,30027,30007,30008,30009,30010,30028,30029,30023,30024]);\r\nEvent\r\n| where EventID in~ (EventIDs) and Source  == \"Microsoft-AzureADPasswordProtection-DCAgent\"\r\n| extend parsed = parse_xml(EventData)\r\n| extend samAccountName = tostring(parsed.DataItem.EventData.Data[0].['#text'])\r\n| extend UserName = tostring(parsed.DataItem.EventData.Data[1].['#text'])\r\n| summarize arg_max(TimeGenerated,*) by bin(TimeGenerated,TimeWindow),samAccountName,EventID\r\n| order by TimeGenerated1 desc \r\n| project TimeGenerated1, samAccountName, UserName, EventID, RenderedDescription\r\n| extend EventName = case(\r\n    EventID == 10014, \"Pass - User\",\r\n    EventID == 10015, \"Pass - Admin\",\r\n    EventID == 30002, \"Fail - Tenant List - User\",\r\n    EventID == 30003, \"Fail - Tenant List - Admin\",\r\n    EventID == 30004, \"Fail - Microsoft List - User\",\r\n    EventID == 30005, \"Fail - Microsoft List - Admin\",\r\n    EventID == 30026, \"Fail - Combined Lists - User\",\r\n    EventID == 30027, \"Fail - Combined Lists - Admin\",\r\n    EventID == 30021, \"Fail - Bad UserName - User\",\r\n    EventID == 30022, \"Fail - Bad UserName - Admin\",\r\n    EventID == 30008, \"Audit - Failed Tenant List - User\",\r\n    EventID == 30007, \"Audit - Failed Tenant List - Admin\",\r\n    EventID == 30010, \"Audit - Failed Microsoft List - User\",\r\n    EventID == 30009, \"Audit - Failed Microsoft List - Admin\",\r\n    EventID == 30028, \"Audit - Failed Combined List - User\",\r\n    EventID == 30029, \"Audit - Failed Combined List - Admin\",\r\n    EventID == 30024, \"Audit - Bad UserName - User\",\r\n    EventID == 30023, \"Audit - Bad UserName - Admin\",\r\n    \"Undefined\"\r\n)\r\n| extend ShortDescription = tostring(split(RenderedDescription, '.')[0])\r\n| summarize count(), LatestAttempt = max(TimeGenerated1) by samAccountName, EventID, EventName\r\n| top 5 by count_ desc",
              "size": 3,
              "showAnalytics": true,
              "title": "Failed/Audited Password Set Attempts (limit 5)",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "exportFieldName": "samAccountName",
              "exportParameterName": "samAccountName",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "samAccountName",
                  "formatter": 1
                },
                "subtitleContent": {
                  "columnMatch": "EventName",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 8,
                  "formatOptions": {
                    "palette": "categorical"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "LatestAttempt"
                },
                "showBorder": true,
                "size": "auto"
              }
            },
            "name": "query_AttemptsByUser"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let TimeWindow = 2s;\r\nlet EventIDs = dynamic([10014,10015,30002,30003,30004,30005,30026,30027,30007,30008,30009,30010,30028,30029,30023,30024]);\r\nEvent\r\n| where EventID in~ (EventIDs) and Source  == \"Microsoft-AzureADPasswordProtection-DCAgent\"\r\n| extend parsed = parse_xml(EventData)\r\n| extend samAccountName = tostring(parsed.DataItem.EventData.Data[0].['#text'])\r\n| extend UserName = tostring(parsed.DataItem.EventData.Data[1].['#text'])\r\n| where samAccountName =~ \"{samAccountName}\"\r\n| summarize arg_max(TimeGenerated,*) by bin(TimeGenerated,TimeWindow),samAccountName,EventID\r\n| order by TimeGenerated1 desc \r\n| project TimeGenerated1, samAccountName, UserName, EventID, RenderedDescription\r\n| extend EventName = case(\r\n    EventID == 10014, \"Pass - User\",\r\n    EventID == 10015, \"Pass - Admin\",\r\n    EventID == 30002, \"Fail - Tenant List - User\",\r\n    EventID == 30003, \"Fail - Tenant List - Admin\",\r\n    EventID == 30004, \"Fail - Microsoft List - User\",\r\n    EventID == 30005, \"Fail - Microsoft List - Admin\",\r\n    EventID == 30026, \"Fail - Combined Lists - User\",\r\n    EventID == 30027, \"Fail - Combined Lists - Admin\",\r\n    EventID == 30021, \"Fail - Bad UserName - User\",\r\n    EventID == 30022, \"Fail - Bad UserName - Admin\",\r\n    EventID == 30008, \"Audit - Failed Tenant List - User\",\r\n    EventID == 30007, \"Audit - Failed Tenant List - Admin\",\r\n    EventID == 30010, \"Audit - Failed Microsoft List - User\",\r\n    EventID == 30009, \"Audit - Failed Microsoft List - Admin\",\r\n    EventID == 30028, \"Audit - Failed Combined List - User\",\r\n    EventID == 30029, \"Audit - Failed Combined List - Admin\",\r\n    EventID == 30024, \"Audit - Bad UserName - User\",\r\n    EventID == 30023, \"Audit - Bad UserName - Admin\",\r\n    \"Undefined\"\r\n)\r\n| project TimeGenerated = TimeGenerated1, samAccountName, EventID, EventName",
              "size": 3,
              "title": "Failed Logins for {samAccountName}",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ]
            },
            "conditionalVisibility": {
              "parameterName": "samAccountName",
              "comparison": "isNotEqualTo"
            },
            "name": "query_IndividualUserSelected"
          },
          {
            "type": 1,
            "content": {
              "json": "### Top Hitters Help Text\r\n\r\nThis content is aggregating the top hitters who are hitting a specific type of Block/Audit password event generated via Azure AD Password Protection.\r\n\r\nThis visualization is limited to 5 users due to how Azure Monitor workbook Tiles best display.\r\n\r\nThis visualization is generated from the following events:\r\n10014,10015,30002,30003,30004,30005,30026,30027,30007,30008,30009,30010,30028,30029,30023,30024\r\n\r\nData is coming from the Microsoft-AzureADPasswordProtection-DCAgent event log on each individual DC.\r\n\r\nClicking on a type of block/audit event will populate chart of the specific users failed/blocked password attemps.  This chart displays the time the event happened, the samAccountName, EventID, and which list (Microsoft/Tenant) the user was blocked by.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "Help_OverallAttempts - Copy"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "group-Overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Password Attempts Resulting in Failure",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let TimeWindow = 2s;\r\nlet EventIDs = dynamic([30002,30003,30004,30005,30026,30027,30007,30008,30009,30010,30028,30029,30023,30024]);\r\nEvent\r\n| where EventID in~ (EventIDs) and Source  == \"Microsoft-AzureADPasswordProtection-DCAgent\"\r\n| extend parsed = parse_xml(EventData)\r\n| extend samAccountName = tostring(parsed.DataItem.EventData.Data[0].['#text'])\r\n| extend UserName = tostring(parsed.DataItem.EventData.Data[1].['#text'])\r\n| summarize arg_max(TimeGenerated,*) by bin(TimeGenerated,TimeWindow),samAccountName,EventID, Source, Computer\r\n| order by TimeGenerated1 desc \r\n| summarize EventCount=count(EventID) by Source, Computer\r\n| join (\r\n    Event\r\n    | where EventID in~ (EventIDs) and Source  == \"Microsoft-AzureADPasswordProtection-DCAgent\"\r\n    | extend parsed = parse_xml(EventData)\r\n    | extend samAccountName = tostring(parsed.DataItem.EventData.Data[0].['#text'])\r\n    | extend UserName = tostring(parsed.DataItem.EventData.Data[1].['#text'])\r\n    | summarize arg_max(TimeGenerated,*) by bin(TimeGenerated,TimeWindow),samAccountName,EventID, Source, Computer\r\n    | order by TimeGenerated1 desc \r\n    | make-series EventTimeLine = count(EventID) default = 0 on TimeGenerated1 from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Source, Computer) on Computer\r\n| project-away Source1, Computer1, TimeGenerated1",
              "size": 3,
              "title": "User Password Failure Timeline",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "EventCount",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "coldHot"
                    }
                  },
                  {
                    "columnMatch": "EventTimeLine",
                    "formatter": 21,
                    "formatOptions": {
                      "palette": "red"
                    }
                  }
                ]
              }
            },
            "name": "query_FailureEventTimeline"
          },
          {
            "type": 1,
            "content": {
              "json": "#### User Password Failure Timeline Help Text\r\n\r\nThis content visualizing the total number of password change events that were prevented from setting a known bad password either via the Microsoft blocklist or Tenant blocklist.\r\n\r\nThis visualization is generated from the following events: 10014,10015,30002,30003,30004,30005,30026,30027,30007,30008,30009,30010,30028,30029,30023,30024\r\n\r\nData is coming from the Microsoft-AzureADPasswordProtection-DCAgent event log on each individual DC.\r\n\r\nThe EventTimeline displays a graphical view based on the selected TimeRange: **{TimeRange:label}**",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "Help_EventTimeline"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let TimeWindow = 10s;\r\nlet EventIDs = dynamic([30002,30003,30004,30005,30026,30027,30021,30022]);\r\nEvent\r\n| where EventID in~ (EventIDs) and Source  == \"Microsoft-AzureADPasswordProtection-DCAgent\"\r\n| extend parsed = parse_xml(EventData)\r\n| extend samAccountName = tostring(parsed.DataItem.EventData.Data[0].['#text'])\r\n| extend UserName = tostring(parsed.DataItem.EventData.Data[1].['#text'])\r\n| summarize arg_max(TimeGenerated,*) by bin(TimeGenerated,TimeWindow),samAccountName,EventID\r\n| project TimeGenerated1, samAccountName, UserName, EventID, RenderedDescription, EventLog, Computer, _ResourceId\r\n| extend Pack=pack_all()\r\n| sort by TimeGenerated1 desc\r\n| extend TimeFromNow = now() - TimeGenerated1\r\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago') \r\n| project TimeGenerated1, [\"Time\"]=strcat('🕒', TimeAgo), EventLog, Computer, RenderedDescription, samAccountName, [\"Details\"]=Pack, _ResourceId\r\n\r\n",
              "size": 3,
              "showAnalytics": true,
              "noDataMessage": "The query returned no results.  This may be because the tenant is in \"Audit\" mode.",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "UserName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Details",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "linkLabel": "🔍 View Details",
                      "linkIsContextBlade": true
                    }
                  }
                ],
                "filter": true
              }
            },
            "name": "query_PasswordFailures - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "#### Raw Event Log Data Help Text\r\n\r\nThis chart is visualizing the different events coming in from the Microsoft-AzureADPasswordProtection-DCAgent event log on each Domain Controller.  Time is defined based on \"Time since the event was ingested\".\r\n\r\nAdmins can click on \"View Details\" to see the TimeGenerated, UserName, SamAccountName, and Description.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "Help_RawEventFailures"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "PasswordFailures"
      },
      "name": "group_PasswordFailures"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Password Attempts Resulting in Audits",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let correlationWindow = 5s;\r\nEvent\r\n| where EventID in (30008,30007,30010,30009,30028,30029)\r\n| where Source == 'Microsoft-AzureADPasswordProtection-DCAgent'\r\n| extend parsed = parse_xml(EventData)\r\n| extend samAccountName = tostring(parsed.DataItem.EventData.Data[0].['#text'])\r\n| extend UserName = tostring(parsed.DataItem.EventData.Data[1].['#text'])\r\n| order by samAccountName asc, EventID asc, TimeGenerated asc\r\n| extend nextEventId = next(EventID),\r\n         nextsamAccountName = next(samAccountName),\r\n         nextTimeGenerated = next(TimeGenerated)\r\n| extend Delta = iff(nextEventId == EventID and nextsamAccountName == samAccountName, nextTimeGenerated-TimeGenerated, time(null))\r\n| where Delta < correlationWindow\r\n| summarize EventCount=count(EventID) by Source, Computer\r\n| join (\r\n    Event\r\n    | where EventID in (30008,30007,30010,30009,30028,30029)\r\n    | where Source == 'Microsoft-AzureADPasswordProtection-DCAgent'\r\n    | extend parsed = parse_xml(EventData)\r\n    | extend samAccountName = tostring(parsed.DataItem.EventData.Data[0].['#text'])\r\n    | extend UserName = tostring(parsed.DataItem.EventData.Data[1].['#text'])\r\n    | order by samAccountName asc, EventID asc, TimeGenerated asc\r\n    | extend nextEventId = next(EventID),\r\n            nextsamAccountName = next(samAccountName),\r\n            nextTimeGenerated = next(TimeGenerated)\r\n    | extend Delta = iff(nextEventId == EventID and nextsamAccountName == samAccountName, nextTimeGenerated-TimeGenerated, time(null))\r\n    | where Delta < correlationWindow\r\n    | make-series EventTimeLine = count(EventID) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Source, Computer) on Computer\r\n| project-away Source1, Computer1, TimeGenerated",
              "size": 3,
              "noDataMessage": "The query returned no results.  This may be because the tenant is in \"Enforced\" mode.",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "EventCount",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "coldHot"
                    }
                  },
                  {
                    "columnMatch": "EventTimeLine",
                    "formatter": 21,
                    "formatOptions": {
                      "palette": "red"
                    }
                  }
                ]
              }
            },
            "name": "query_AuditEventTimeline"
          },
          {
            "type": 1,
            "content": {
              "json": "#### User Password Audit Timeline Help Text\r\n\r\nThis content visualizing the total number of password audited events who were flagged as setting a known bad password either via the Microsoft blocklist or Tenant blocklist.\r\n\r\nThis visualization is generated from the following events: 10014,10015,30002,30003,30004,30005,30026,30027,30007,30008,30009,30010,30028,30029,30023,30024\r\n\r\nData is coming from the Microsoft-AzureADPasswordProtection-DCAgent event log on each individual DC.\r\n\r\nThe EventTimeline displays a graphical view based on the selected TimeRange: **{TimeRange:label}**",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "Help_EventTimelineAudit"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let correlationWindow = 5s;\r\nEvent\r\n| where EventID in (30008,30007,30010,30009,30028,30029)\r\n| where Source == 'Microsoft-AzureADPasswordProtection-DCAgent'\r\n| extend parsed = parse_xml(EventData)\r\n| extend samAccountName = tostring(parsed.DataItem.EventData.Data[0].['#text'])\r\n| extend UserName = tostring(parsed.DataItem.EventData.Data[1].['#text'])\r\n| order by samAccountName asc, EventID asc, TimeGenerated asc\r\n| extend nextEventId = next(EventID),\r\n         nextsamAccountName = next(samAccountName),\r\n         nextTimeGenerated = next(TimeGenerated)\r\n| extend Delta = iff(nextEventId == EventID and nextsamAccountName == samAccountName, nextTimeGenerated-TimeGenerated, time(null))\r\n| where Delta < correlationWindow\r\n| extend Pack=pack_all()\r\n| sort by TimeGenerated desc\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago') \r\n| project TimeGenerated, [\"Time\"]=strcat('🕒', TimeAgo), EventLog, Computer, RenderedDescription, samAccountName, [\"Details\"]=Pack, _ResourceId",
              "size": 3,
              "showAnalytics": true,
              "noDataMessage": "The query returned no results.  This may be because the tenant is in \"Enforced\" mode.",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Details",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "linkLabel": "🔍 View Details",
                      "linkIsContextBlade": true
                    }
                  }
                ]
              }
            },
            "name": "query_PasswordAudits"
          },
          {
            "type": 1,
            "content": {
              "json": "#### Raw Event Log Data Help Text\r\n\r\nThis chart is visualizing the different events coming in from the Microsoft-AzureADPasswordProtection-DCAgent event log on each Domain Controller.  Time is defined based on \"Time since the event was ingested\".\r\n\r\nAdmins can click on \"View Details\" to see the TimeGenerated, UserName, SamAccountName, and Description.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "Help_RawEventAudits"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "PasswordAudits"
      },
      "name": "group_PasswordAudits"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Synchronization Status",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let UnhealthyCriteria = 9h;\r\nEvent\r\n| where EventID == 20003\r\n| summarize LastHeartbeat = max(TimeGenerated) by Computer\r\n| extend State = \r\niff(LastHeartbeat < ago(UnhealthyCriteria), 'Unhealthy', 'Healthy')",
              "size": 3,
              "showAnalytics": true,
              "title": "Proxy End-to-End Azure Communication Status",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Computer"
                },
                "subtitleContent": {
                  "columnMatch": "State",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Unhealthy",
                        "representation": "4",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                "secondaryContent": {
                  "columnMatch": "LastHeartbeat",
                  "formatter": 6
                },
                "showBorder": true,
                "sortCriteriaField": "Computer",
                "sortOrderField": 1,
                "size": "auto"
              }
            },
            "name": "query_AzureHeartbeat"
          },
          {
            "type": 1,
            "content": {
              "json": "#### Proxy End-To-End Status Help Text\r\n\r\nThis visualization is leveraging the data coming from the Microsoft-AzureADPasswordProtection-ProxyService event log on the Azure AD Password Protection Proxy servers.\r\n\r\nThis event is generated every 8 hours, therefore the timeframe is set to a 9 hour \"*Unhealthy*\" state.\r\n\r\nIf the machines listed in **DC Azure/Tenant Password Policy Sync Time** are marked as a \"*Unhealthy*\", review event logs on individual proxy machines and verify communication outbound to Azure.\r\n",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "Help_ProxyEndToEndStatus"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let UnhealthyCriteria = 60m;\r\nEvent\r\n| where Source == \"Microsoft-AzureADPasswordProtection-DCAgent\"\r\n| where EventID == 30006\r\n| summarize max(TimeGenerated) by EventID, Computer\r\n| extend State = iff(max_TimeGenerated < ago(UnhealthyCriteria), 'Unhealthy', 'Healthy')\r\n| extend TimeFromNow = now() - max_TimeGenerated\r\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago') \r\n| join kind=inner(\r\n        Event\r\n    | where Source == \"Microsoft-AzureADPasswordProtection-DCAgent\"\r\n    | where EventID == 30006\r\n    | extend EventInfo = parse_xml(EventData)\r\n    | extend AzureList = EventInfo.DataItem.EventData.Data[2]['#text']\r\n    | extend TenantList = EventInfo.DataItem.EventData.Data[3]['#text']\r\n    | summarize max(TimeGenerated) by Computer, tostring(AzureList), tostring(TenantList), _ResourceId\r\n    ) on max_TimeGenerated, Computer\r\n| project [\"Computer\"]=strcat('🖥️ ', Computer), State, LastSync = strcat('🕒 ', TimeAgo), todatetime(AzureList), todatetime(TenantList)",
              "size": 3,
              "showAnalytics": true,
              "title": "DC Azure/Tenant Password Policy Sync Time",
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "State",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Unhealthy",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              },
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Computer",
                  "formatter": 16,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "AzureList",
                  "formatter": 6,
                  "dateFormat": {
                    "formatName": "shortDateTimePattern"
                  },
                  "tooltipFormat": {
                    "tooltip": "Azure Defined List"
                  }
                },
                "rightContent": {
                  "columnMatch": "TenantList",
                  "formatter": 6,
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal"
                    }
                  },
                  "dateFormat": {
                    "formatName": "shortDateTimePattern"
                  },
                  "tooltipFormat": {
                    "tooltip": "Tenant Defined List"
                  }
                },
                "secondaryContent": {
                  "columnMatch": "TimeAgo",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "colors",
                    "thresholdsGrid": [
                      {
                        "operator": "startsWith",
                        "thresholdValue": "6",
                        "representation": "yellow",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "green",
                        "text": "{0}{1}"
                      }
                    ]
                  },
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal"
                    }
                  }
                },
                "showBorder": true,
                "size": "auto"
              }
            },
            "name": "query_SyncStatus"
          },
          {
            "type": 1,
            "content": {
              "json": "#### Policy Sync Time Help Text\r\nThis content is leveraging the Microsoft-AzureADPasswordProtection-DCAgent log and EventID 30006.  This event details the last time that a sync from the Proxy occured.\r\n\r\nUnhealthy Criteria is set for 60 minutes as the sync should happen every 30-40 minutes.\r\n\r\nCauses of an unhealthy state could be:\r\n1. Proxy is offline\r\n2. Proxy servers have lost connectivity to Azure\r\n3. DCs can't reach the Proxy",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "help_PolicySyncTime"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "SyncStatus"
      },
      "name": "group_SynchronizationStatus"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
